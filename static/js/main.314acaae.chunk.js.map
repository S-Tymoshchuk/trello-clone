{"version":3,"sources":["reducers/reducer-appbar-status.js","materialUI/App-bar.js","materialUI/Drawer.js","reducers/reduser-list.js","components/trelloActionButton.js","components/trelloCard.js","components/trelloList.js","attachment/Trello.js","reducers/reducer-budget.js","materialUI/ListTable.js","attachment/Budget-controller.js","components/myInfo.js","components/App.js","store/store.js","index.js"],"names":["initial","appBarStatus","actionAppSwapStatus","status","type","payload","state","action","connect","props","classes","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","useStyles","style","marginBottom","AppBar","position","Toolbar","IconButton","onClick","dispatch","edge","className","color","aria-label","Typography","variant","Button","list","width","fullList","appBar","Drawer","open","onClose","role","List","ListItem","button","component","NavLink","to","ListItemIcon","ListItemText","primary","Divider","listId","cardId","id","card","text","addList","addCard","listReducer","newItem","newCard","map","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","newState","newList","splice","find","listStart","listEnd","TrelloActionButton","formOpen","textValue","e","setState","target","value","changeState","formClose","renderButton","buttonText","RenderButtonSc","Icon","handleAddList","handleAddCard","renderForm","placeHolder","buttonTitle","display","CardSc","TextareaAutosizeSc","onBlur","autoFocus","onChange","placeholder","ButtonFormContainer","onMouseDown","backgroundColor","cursor","this","React","Component","styled","div","Card","TextareaAutosize","CardStyle","TrelloCard","index","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","CardContent","ContainerStyled","TrelloList","cards","droppableId","droppableProps","key","ListStyle","lists","onDragEnd","result","console","log","destination","source","sort","direction","totalIncome","totalExpenses","incomeFlow","budgetReducer","calculateTotal","acc","entry","amount","checkType","description","Number","addItem","item","reduce","idx","findIndex","deleteItem","slice","budget","array","useState","currency","setCurrency","setDescription","setAmount","marginTop","TableContainer","Table","TableHead","TableRow","TableCell","TextField","select","label","event","option","MenuItem","align","required","InputLabelProps","shrink","preventDefault","addBudget","TableBody","row","scope","total","income","expenses","textAlign","MyInfo","App","exact","path","render","BudgetSc","reducers","combineReducers","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"kWAEMA,EAAU,CACZC,cAAc,GAeLC,EAAsB,SAACC,GAChC,MAAO,CACHC,KApBQ,UAqBRC,QAASF,IAIFF,EAlBM,WAA8B,IAA7BK,EAA4B,uDAApBN,EAASO,EAAW,uCAC9C,OAAQA,EAAOH,MACX,IATQ,UAUJ,OAAO,eACAE,EADP,CACcL,aAAcM,EAAOF,UAEvC,QACI,OAAOC,IC+BJE,iBAjCS,SAACC,GACrB,IAWMC,EAXYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaJ,EAAMK,QAAQ,IAE/BC,MAAO,CACHJ,SAAU,MAGFK,GAChB,OACI,yBAAKC,MAAO,CAACC,aAAc,SACvB,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAS,WACjBjB,EAAMkB,SAASzB,GAAoB,KACpC0B,KAAK,QAAQC,UAAWnB,EAAQK,WAAYe,MAAM,UAAUC,aAAW,QACtE,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWnB,EAAQQ,OAA5C,uBAGA,kBAACgB,EAAA,EAAD,CAAQJ,MAAM,WAAd,e,gKCpBdX,EAAYR,YAAW,CACzBwB,KAAM,CACFC,MAAO,KAEXC,SAAU,CACND,MAAO,UAmEA5B,eANS,SAACF,GACrB,MAAO,CACHH,OAAQG,EAAMgC,UAIP9B,EA9DS,SAACC,GACrB,IAAMC,EAAUS,IA4ChB,OACI,6BACI,kBAACoB,EAAA,EAAD,CAAQC,KAAM/B,EAAMN,OAAOF,aAAcwC,QAAS,WAC9ChC,EAAMkB,SAASzB,GAAoB,MA5C3C,yBACI2B,UAAWnB,EAAQyB,KACnBO,KAAK,gBAEL,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eAAUC,QAAQ,GAAU,CAACC,UAAWC,IAASC,GAAI,SAArD,CAA+DtB,QAAS,WACpEjB,EAAMkB,SAASzB,GAAoB,OAEnC,kBAAC+C,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,UAE1B,kBAACC,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,eAAUC,QAAQ,GAAU,CAACC,UAAWC,IAASC,GAAI,gBAArD,CAAsEtB,QAAS,WAC3EjB,EAAMkB,SAASzB,GAAoB,OAEnC,kBAAC+C,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,iBAE1B,kBAACC,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,2BAAUC,QAAM,GAAhB,UAAyB,GAAU,CAACC,UAAWC,IAASC,GAAI,WAA5D,CAAwEtB,QAAS,WAC7EjB,EAAMkB,SAASzB,GAAoB,OAEnC,kBAAC+C,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,uBAE1B,kBAACC,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACI,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,iBAE1B,kBAACC,EAAA,EAAD,MACA,kBAACR,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACI,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,4BAE1B,kBAACC,EAAA,EAAD,a,2CC9DZC,EAAS,EACTC,EAAS,EAEPtD,GAAU,CACZ,CACIkB,MAAO,UACPqC,GAAG,QAAD,OAAU,GACZC,KAAM,CACF,CACID,GAAG,QAAD,OAAU,GACZE,KAAM,+XAEV,CACIF,GAAG,QAAD,OAAU,GACZE,KAAM,0UAIlB,CACIvC,MAAO,YACPqC,GAAG,QAAD,OAAU,GACZC,KAAM,CACF,CACID,GAAG,QAAD,OAAU,GACZE,KAAM,gFAEV,CACIF,GAAG,QAAD,OAAU,GACZE,KAAM,oJAuETC,GAAU,SAACD,GACpB,MAAO,CAACrD,KAxGK,WAwGWC,QAASoD,IAGxBE,GAAU,SAACF,EAAMJ,GAC1B,MAAO,CAACjD,KA3GK,WA2GWC,QAAS,CAACoD,OAAMJ,YAwB7BO,GA9FK,WAA8B,IAA7BtD,EAA4B,uDAApBN,GAASO,EAAW,uCAC7C,OAAQA,EAAOH,MACX,IAxCS,WAyCL,IAAMyD,EAAU,CACZ3C,MAAOX,EAAOF,QACdkD,GAAG,QAAD,OAAUF,GACZG,KAAM,IAGV,OADAH,GAAU,EACJ,GAAN,mBAAW/C,GAAX,CAAkBuD,IAEtB,IAhDS,WAiDL,IAAMA,EAAU,CAEZN,GAAG,QAAD,OAAUD,GACZG,KAAMlD,EAAOF,QAAQoD,MAEzBH,GAAU,EACV,IAAMQ,EAAUxD,EAAMyD,KAAI,SAAC5B,GACvB,OAAIA,EAAKoB,KAAOhD,EAAOF,QAAQgD,OACpB,eAAIlB,EAAX,CAAiBqB,KAAK,GAAD,mBAAMrB,EAAKqB,MAAX,CAAiBK,MAEnC1B,KAEX,OAAO2B,EAEX,IA9Da,eA8Db,MAOQvD,EAAOF,QALP2D,EAFR,EAEQA,iBACAC,EAHR,EAGQA,eACAC,EAJR,EAIQA,oBACAC,EALR,EAKQA,kBACA/D,EANR,EAMQA,KAEEgE,EAAQ,YAAO9D,GACrB,GAAa,SAATF,EAAiB,CACjB,IAAMiE,EAAUD,EAASE,OAAOJ,EAAqB,GAErD,OADAE,EAASE,OAAT,MAAAF,EAAQ,CAAQD,EAAmB,GAA3B,mBAAiCE,KAClCD,EAIX,GAAIJ,IAAqBC,EAAgB,CAAC,IAAD,EAE/B9B,EAAO7B,EAAMiE,MAAK,SAAApC,GAAI,OAAI6B,IAAqB7B,EAAKoB,MACpDC,EAAOrB,EAAKqB,KAAKc,OAAOJ,EAAqB,IACnD,EAAA/B,EAAKqB,MAAKc,OAAV,SAAiBH,EAAmB,GAApC,mBAA0CX,KAE9C,GAAIQ,IAAqBC,EAAgB,CAAC,IAAD,EAG/BO,EAAYlE,EAAMiE,MAAK,SAAApC,GAAI,OAAI6B,IAAqB7B,EAAKoB,MAEzDC,EAAOgB,EAAUhB,KAAKc,OAAOJ,EAAqB,GAElDO,EAAUnE,EAAMiE,MAAK,SAAApC,GAAI,OAAI8B,IAAmB9B,EAAKoB,OAE3D,EAAAkB,EAAQjB,MAAKc,OAAb,SAAoBH,EAAmB,GAAvC,mBAA6CX,KAEjD,OAAOY,EACX,QACI,OAAO9D,I,goBC3FboE,G,2MAEFpE,MAAQ,CACJqE,UAAU,EACVlB,KAAM,I,EAGVmB,UAAY,SAACC,GACT,EAAKC,SAAS,CACVrB,KAAMoB,EAAEE,OAAOC,S,EAIvBC,YAAc,WACV,EAAKH,SAAS,CACVH,UAAU,K,EAIlBO,UAAY,WACR,EAAKJ,SAAS,CACVH,UAAU,K,EAIlBQ,aAAe,WAAO,IAEZC,EADS,EAAK3E,MAAb0B,KACmB,mBAAqB,mBAC/C,OACI,kBAACkD,GAAD,CAAgB3D,QAAS,EAAKuD,aAC1B,kBAACK,EAAA,EAAD,YACA,2BAAIF,K,EAMhBG,cAAgB,WAAO,IACZ5D,EAAY,EAAKlB,MAAjBkB,SACA8B,EAAQ,EAAKnD,MAAbmD,KACHA,GACA,EAAKqB,SAAS,CACVrB,KAAM,KAGd9B,EAAS+B,GAAQD,K,EAIrB+B,cAAgB,WAAO,IAAD,EACS,EAAK/E,MAAzBkB,EADW,EACXA,SAAU0B,EADC,EACDA,OACVI,EAAQ,EAAKnD,MAAbmD,KACHA,GACA,EAAKqB,SAAS,CACVrB,KAAM,KAGd9B,EAASgC,GAAQF,EAAMJ,K,EAI3BoC,WAAa,WAAO,IACTtD,EAAQ,EAAK1B,MAAb0B,KACDuD,EAAcvD,EAAO,sBAAwB,sBAC7CwD,EAAcxD,EAAO,WAAa,WACxC,OACI,6BACI,yBAAKf,MAAO,CAACwE,QAAS,SAClB,kBAACC,GAAD,KACI,kBAACC,GAAD,CAAoBC,OAAQ,EAAKb,UAAWc,WAAS,EAAChB,MAAO,EAAK1E,MAAMmD,KACpDwC,SAAU,EAAKrB,UAAWsB,YAAaR,MAGnE,kBAACS,GAAD,KACI,kBAACjE,EAAA,EAAD,CAAQkE,YAAajE,EAAO,EAAKqD,cAAgB,EAAKD,cAAenE,MAAO,CACxEU,MAAO,QACPuE,gBAAiB,YAEhBV,GAEL,kBAACL,EAAA,EAAD,CAAMlE,MAAO,CAACkF,OAAQ,WAAY5E,QAAS,EAAKwD,WAAhD,Y,wEAOZ,OACI,6BACKqB,KAAKjG,MAAMqE,SAAW4B,KAAKd,aAAec,KAAKpB,oB,GAzF/BqB,IAAMC,WA+FjCN,GAAsBO,IAAOC,IAAV,MAMnBtB,GAAiBqB,IAAOC,IAAV,MAUdd,GAASa,YAAOE,IAAPF,CAAH,MAQNZ,GAAqBY,YAAOG,IAAPH,CAAH,MAQTlG,iBAAUkE,I,gHC/HzB,IAuBMoC,GAAYJ,IAAOC,IAAV,MAIAI,GA3BI,SAAC,GAAsB,IAArBtD,EAAoB,EAApBA,KAAMF,EAAc,EAAdA,GAAGyD,EAAW,EAAXA,MAC1B,OACI,kBAAC,KAAD,CAAWC,YAAaC,OAAO3D,GAAKyD,MAAOA,IAEnC,SAACG,GAAD,OACI,kBAACL,GAAD,eAAWM,IAAKD,EAASE,UACVF,EAASG,eACTH,EAASI,iBACpB,kBAACX,EAAA,EAAD,KACI,kBAACY,GAAA,EAAD,KACI,kBAACxF,EAAA,EAAD,KACKyB,U,4KCbrC,IAkCMgE,GAAkBf,IAAOC,IAAV,MASNe,GA3CI,SAAC,GAAmC,IAAlCxG,EAAiC,EAAjCA,MAAOyG,EAA0B,EAA1BA,MAAOtE,EAAmB,EAAnBA,OAAQ2D,EAAW,EAAXA,MAEvC,OACI,kBAAC,KAAD,CAAWC,YAAa5D,EAAQ2D,MAAOA,IAE/B,SAACG,GAAD,OACI,uCAAKC,IAAKD,EAASE,UAAcF,EAASG,eACjCH,EAASI,iBACd,kBAAC,KAAD,CAAWK,YAAaV,OAAO7D,KAEvB,SAAC8D,GAAD,OACI,kBAACM,GAAD,eAAiBL,IAAKD,EAASE,UAAcF,EAASU,gBAClD,4BAAK3G,GAEDyG,EAAM5D,KAAI,SAACP,EAAMwD,GACb,OAAO,kBAAC,GAAD,CAAYc,IAAKtE,EAAKD,GAAIE,KAAMD,EAAKC,KAAMF,GAAIC,EAAKD,GACxCyD,MAAOA,OAGjCG,EAASjB,YACV,kBAAC,GAAD,CAAoB7C,OAAQA,EAAQlB,MAAI,a,2FClBhF,IAwCM4F,GAAYrB,IAAOC,IAAV,MAKAnG,gBAXS,SAACF,GACrB,MAAO,CACH0H,MAAO1H,EAAM0H,SASNxH,EA7CA,SAACC,GAAW,IAClBuH,EAASvH,EAATuH,MAUL,OACI,kBAAC,KAAD,CAAiBC,UAVH,SAACC,GAEfC,QAAQC,IAAIF,GAFc,IAGnBG,EAA0CH,EAA1CG,YAAaC,EAA6BJ,EAA7BI,OAAQrB,EAAqBiB,EAArBjB,YAAa7G,EAAQ8H,EAAR9H,KACpCiI,GAGL5H,EAAMkB,SJ8FM,SAChBqC,EACAC,EACAC,EACAC,EACA8C,EACA7G,GAEA,MAAO,CACHA,KAtHa,eAuHbC,QAAS,CACL2D,mBACAC,iBACAC,sBACAC,oBACA8C,cACA7G,SI9GWmI,CAAKD,EAAOV,YAAaS,EAAYT,YAAaU,EAAOtB,MAAOqB,EAAYrB,MAAOC,EAAa7G,MAI3G,kBAAC,KAAD,CAAWwH,YAAY,YAAYY,UAAU,aAAapI,KAAK,SAEvD,SAAC+G,GAAD,OACI,kBAACY,GAAD,eAAWX,IAAKD,EAASE,UAAcF,EAASU,gBAExCG,EAAMjE,KAAI,SAAC5B,EAAM6E,GAGb,OAFAmB,QAAQC,IAAIjG,GACZgG,QAAQC,IAAIjG,EAAKqB,MACV,kBAAC,GAAD,CAAYsE,IAAK3F,EAAKoB,GAAIrC,MAAOiB,EAAKjB,MAAOyG,MAAOxF,EAAKqB,KAC7CH,OAAQlB,EAAKoB,GAAIyD,MAAOA,OAGlDG,EAASjB,YACV,kBAAC,GAAD,c,mIC/BxB7C,GAAS,EAGPU,GAAM,CACR,iCAAS,cACT,uCAAU,iBAIR/D,GAAU,CACZ,CACIyI,YAAa,EACbC,cAAe,EACfC,WAAY,KAkFLC,GAvEO,WAA8B,IAA7BtI,EAA4B,uDAApBN,GAASO,EAAW,uCACzCsI,EAAiB,SAACC,EAAKC,GAAW,IAE7B3I,EAAgB2I,EAAhB3I,KAAM4I,EAAUD,EAAVC,OACPlB,EAAM/D,GAAI3D,GAEhB,OAAO,eAAI0I,EAAX,eAAiBhB,EAAMgB,EAAIhB,GAAOkB,KAEtC,OAAQzI,EAAOH,MAEX,IArCW,aAqCO,IAAD,EAE4BG,EAAOF,QAAzC4I,EAFM,EAENA,UAAWC,EAFL,EAEKA,YAAaF,EAFlB,EAEkBA,OACzBnF,EAAU,CACZN,GAAIF,GACJjD,KAAM6I,EACNC,YAAaA,EACbF,OAAQG,OAAOH,IAEnB3F,IAAU,EAEV,IAAM+F,EAAU9I,EAAMyD,KAAI,SAAC5B,GACvB,OAAO,eAAIA,EAAX,CAAiBsG,YAAa,EAAGC,cAAe,EAAGC,WAAW,GAAD,mBAAMxG,EAAKwG,YAAX,CAAuB9E,SAIlFqE,EAASkB,EAAQrF,KAAI,SAAAsF,GAAI,OAAIA,EAAKV,WAAWW,OAAOT,EAAgBQ,MAE1E,OAAOnB,EAKX,IA3DY,cA4DR,IAAMqB,EAAMjJ,EAAM,GAAGqI,WAAWa,WAAU,SAACrH,GACvC,OAAOA,EAAKoB,KAAOhD,EAAOF,WAExBoJ,EAAanJ,EAAMyD,KAAI,SAAC5B,GAC1B,OAAO,eACAA,EADP,CAEIsG,YAAa,EACbC,cAAe,EACfC,WAAW,GAAD,mBAAMxG,EAAKwG,WAAWe,MAAM,EAAGH,IAA/B,YAAwCpH,EAAKwG,WAAWe,MAAMH,EAAM,UAIhFrB,EAASuB,EAAW1F,KAAI,SAAAsF,GAAI,OAAIA,EAAKV,WAAWW,OAAOT,EAAgBQ,MAE7E,OAAOnB,EAEX,QACI,OAAO5H,IC2EJE,I,OAAAA,aANS,SAACF,GACrB,MAAO,CACHqJ,OAAQrJ,EAAMqJ,UAIPnJ,EAvIG,SAACC,GACf,IAAImJ,EAAQnJ,EAAMkJ,OAAO,GAAGhB,WADH,EAYOnC,IAAMqD,SAAS,IAZtB,oBAYlBC,EAZkB,KAYRC,EAZQ,OAaavD,IAAMqD,SAAS,IAb5B,oBAalBX,EAbkB,KAaLc,EAbK,OAcGxD,IAAMqD,SAAS,MAdlB,oBAclBb,EAdkB,KAcViB,EAdU,KA4CzB,OACI,yBAAK7I,MAAO,CACR8I,UAAW,SAEX,kBAACvH,EAAA,EAAD,CAAMG,UAAU,MAAMf,aAAW,wBAC7B,kBAACa,EAAA,EAAD,KACI,kBAACuH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAOrI,aAAW,gBACd,kBAACsI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWpJ,MAAO,CACdgB,MAAO,QACPpB,YAAa,QAENuC,GAAG,2BACHkH,QAAM,EACNC,MAAM,sEACN1F,MAAO8E,EACP7D,SA9C1B,SAAA0E,GACjBZ,EAAYY,EAAM5F,OAAOC,QA8CkB/C,QAAQ,YA9DpC,CACf,CACI+C,MAAO,iCACP0F,MAAO,kCAEX,CACI1F,MAAO,uCACP0F,MAAO,yCAyDqC3G,KAAI,SAAA6G,GAAM,OAClB,kBAACC,GAAA,EAAD,CAAU/C,IAAK8C,EAAO5F,MAAOA,MAAO4F,EAAO5F,OACtC4F,EAAOF,YAKxB,kBAACH,GAAA,EAAD,CAAWO,MAAM,SACb,kBAACN,GAAA,EAAD,CACIO,UAAQ,EACRxH,GAAG,oBACHmH,MAAM,mDACN1F,MAAOkE,EACPjD,SA1Dd,SAAApB,GACtBmF,EAAenF,EAAEE,OAAOC,QA0DY/C,QAAQ,cAGhB,kBAACsI,GAAA,EAAD,CAAWO,MAAM,SACb,kBAACN,GAAA,EAAD,CACIjH,GAAG,kBACHmH,MAAM,iCACNtK,KAAK,SACL4K,gBAAiB,CACbC,QAAQ,GAEZhF,SAlEnB,SAAApB,GACjBoF,EAAUpF,EAAEE,OAAOC,QAkEiB/C,QAAQ,WACR+C,MAAOgE,KAGf,kBAACuB,GAAA,EAAD,CAAWO,MAAM,SACb,kBAAC5I,EAAA,EAAD,CAAQD,QAAQ,YAAYH,MAAM,UAAUJ,QApE/D,SAACmD,GACdA,EAAEqG,iBACEpB,GAAYZ,GAA0B,IAAXF,IAC3BvI,EAAMkB,SDuCO,SAACsH,EAAWC,EAAaF,GAC9C,MAAO,CACH5I,KA3FW,aA4FXC,QAAS,CACL4I,YAAWC,cAAaF,WC3CTmC,CAAUrB,EAAUZ,EAAaF,IAChDgB,EAAe,IACfC,EAAU,IACVF,EAAY,OA+DoB,kBAAC,KAAD,UAKhB,kBAACqB,GAAA,EAAD,KACKxB,EAAM7F,KAAI,SAAAsH,GAAG,OACV,kBAACf,GAAA,EAAD,CAAUxC,IAAKuD,EAAI9H,GACT1B,UAAwB,mCAAbwJ,EAAIjL,KAAmB,eAAiB,kBACzD,kBAACmK,GAAA,EAAD,CAAWzH,UAAU,KAAKwI,MAAM,OAC3BD,EAAIjL,MAET,kBAACmK,GAAA,EAAD,CAAWO,MAAM,UAAUO,EAAInC,aAC/B,kBAACqB,GAAA,EAAD,CAAWO,MAAM,UAAUO,EAAIrC,OAAS,OACxC,kBAACuB,GAAA,EAAD,CAAWO,MAAM,SACb,kBAAC,KAAD,CAAY1J,MAAO,CAACkF,OAAQ,WAChB5E,QAAS,WA3E1C,IAAC6B,IA4E+C8H,EAAI9H,GA3EnE9C,EAAMkB,SDyBH,CACHvB,KAnFY,cAoFZC,QC3BgCkD,KA4EmBzB,MAAO,6BChFnDtB,gBANS,SAACF,GACrB,MAAO,CACHiL,MAAOjL,EAAMqJ,UAINnJ,EA9CA,SAACC,GAEZ,IAAI+K,EAAS/K,EAAM8K,MAAM,GAAG9C,YACxBgD,EAAWhL,EAAM8K,MAAM,GAAG7C,cAC9B,OACI,6BACI,yBAAKtH,MAAO,CACRsK,UAAW,WADf,gGAMA,6BACI,kBAACxJ,EAAA,EAAD,CAAQD,QAAQ,YAAYH,MAAM,WAAlC,+HAGA,kBAACI,EAAA,EAAD,CAAQD,QAAQ,YAAYH,MAAM,WAAlC,mJAIJ,kKACA,2BAAO1B,KAAK,OAAO4E,MAAO,eAC1B,6BACI,kBAAC4B,EAAA,EAAD,CAAMxF,MAAO,CAACiF,gBAAiB,UAAWjE,MAAO,QAASN,MAAO,YAC7D,kBAAC0F,GAAA,EAAD,KACI,kBAACxF,EAAA,EAAD,CAAYC,QAAQ,QAAQH,MAAM,UAAUgB,UAAU,OAAtD,wCACY0I,EAASC,EADrB,uBAGA,kBAACzJ,EAAA,EAAD,CAAYC,QAAQ,QAAQH,MAAM,UAAUgB,UAAU,OAAtD,uFAKR,kBAAC,GAAD,W,SC7BD6I,GAVA,WACX,OACI,6BACI,wBAAIvK,MAAO,CAACU,MAAO,QAAnB,2EADJ,yR,yHCMF8J,G,iLAIE,OACI,kBAAC,IAAD,KACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,6BACI,kBAAC,KAAD,CAAOC,OAAK,EAAEC,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,GAAD,SACzC,kBAAC,KAAD,CAAOD,KAAK,eACLC,OAAQ,kBAAM,kBAAC,GAAD,SACrB,kBAACC,GAAD,KACI,kBAAC,KAAD,CAAOF,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,GAAD,iB,GAd9CtF,aAyBZuF,GAAWtF,IAAOC,IAAV,MAMCnG,iBAAUoL,I,SCnCrBK,GAAWC,aAAgB,CAC3BlE,MAAOpE,GACPtB,OAAQrC,EACR0J,OAAQf,KAKGuD,GAFDC,aAAYH,ICN1BI,OAAOF,MAAQA,GAEfG,IAASP,OAAO,kBAAC,IAAD,CAAUI,MAAOA,IAAO,kBAAC,GAAD,OAAmBI,SAASC,eAAe,W","file":"static/js/main.314acaae.chunk.js","sourcesContent":["const APP_BAR = \"APP_BAR\";\r\n\r\nconst initial = {\r\n    appBarStatus: false\r\n};\r\n\r\n\r\nconst appBarStatus = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case APP_BAR:\r\n            return {\r\n                ...state, appBarStatus: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionAppSwapStatus = (status) => {\r\n    return {\r\n        type: APP_BAR,\r\n        payload: status\r\n    };\r\n};\r\n\r\nexport default appBarStatus;","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionAppSwapStatus} from \"../reducers/reducer-appbar-status\";\r\n\r\n\r\nconst AppBarComponent = (props) => {\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    return (\r\n        <div style={{marginBottom: \"20px\"}}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton onClick={() => {\r\n                        props.dispatch(actionAppSwapStatus(true))\r\n                    }} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        My small project :)\r\n                    </Typography>\r\n                    <Button color=\"inherit\">Login</Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default connect()(AppBarComponent);\r\n\r\n\r\n","import React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {connect} from \"react-redux\";\r\nimport {actionAppSwapStatus} from \"../reducers/reducer-appbar-status\";\r\nimport HomeTwoToneIcon from \"@material-ui/icons/HomeTwoTone\";\r\nimport AccountTreeTwoToneIcon from \"@material-ui/icons/AccountTreeTwoTone\";\r\nimport AccountBalanceTwoToneIcon from \"@material-ui/icons/AccountBalanceTwoTone\";\r\nimport SupervisorAccountTwoToneIcon from \"@material-ui/icons/SupervisorAccountTwoTone\";\r\nimport MonetizationOnTwoToneIcon from \"@material-ui/icons/MonetizationOnTwoTone\";\r\nimport {NavLink, Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: \"auto\",\r\n    },\r\n});\r\n\r\n\r\nconst TemporaryDrawer = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const sideList = () => (\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n        >\r\n            <List>\r\n                <ListItem button={true} {...{component: NavLink, to: \"/home\"}} onClick={() => {\r\n                    props.dispatch(actionAppSwapStatus(false));\r\n                }}>\r\n                    <ListItemIcon><HomeTwoToneIcon/></ListItemIcon>\r\n                    <ListItemText primary=\"Home\"/>\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button={true} {...{component: NavLink, to: \"/trelloClone\"}} onClick={() => {\r\n                    props.dispatch(actionAppSwapStatus(false));\r\n                }}>\r\n                    <ListItemIcon><AccountTreeTwoToneIcon/></ListItemIcon>\r\n                    <ListItemText primary=\"TrelloClone\"/>\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button button={true} {...{component: NavLink, to: \"/budget\"}} onClick={() => {\r\n                    props.dispatch(actionAppSwapStatus(false));\r\n                }}>\r\n                    <ListItemIcon><AccountBalanceTwoToneIcon/></ListItemIcon>\r\n                    <ListItemText primary=\"Budget Controller\"/>\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button>\r\n                    <ListItemIcon><SupervisorAccountTwoToneIcon/></ListItemIcon>\r\n                    <ListItemText primary=\"Panel admin\"/>\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem button>\r\n                    <ListItemIcon><MonetizationOnTwoToneIcon/></ListItemIcon>\r\n                    <ListItemText primary=\"Cryptocurrency tracker\"/>\r\n                </ListItem>\r\n                <Divider/>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Drawer open={props.status.appBarStatus} onClose={() => {\r\n                props.dispatch(actionAppSwapStatus(false));\r\n            }}>\r\n                {sideList(\"left\")}\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.appBar\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(TemporaryDrawer);","const ADD_LIST = \"ADD_LIST\";\r\nconst ADD_CARD = \"ADD_CARD\";\r\nconst DRAG_HAPPEND = \"DRAG_HAPPEND\";\r\n\r\nlet listId = 2;\r\nlet cardId = 5;\r\n\r\nconst initial = [\r\n    {\r\n        title: \"Episode\",\r\n        id: `list-${0}`,\r\n        card: [\r\n            {\r\n                id: `card-${0}`,\r\n                text: \"Обертиллиах-2019. Меркушина добыла серебро в короткой индивидуальной гонке\"\r\n            },\r\n            {\r\n                id: `card-${1}`,\r\n                text: \"Владимир ШАРАН: «Заря – сильнейшая команда в УПЛ после Шахтера»\"\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        title: \"Episode 1\",\r\n        id: `list-${1}`,\r\n        card: [\r\n            {\r\n                id: `card-${2}`,\r\n                text: \"Notice that because we used the ES6 shorthand for defining an object literal\"\r\n            },\r\n            {\r\n                id: `card-${3}`,\r\n                text: \"Also, the resulting names are a bit odd. It's generally not a good practice to actually include words like \\\"reducer\\\" in your state key names\"\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nconst listReducer = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case ADD_LIST:\r\n            const newItem = {\r\n                title: action.payload,\r\n                id: `list-${listId}`,\r\n                card: []\r\n            };\r\n            listId += 1;\r\n            return [...state, newItem];\r\n\r\n        case ADD_CARD: {\r\n            const newItem = {\r\n\r\n                id: `list-${cardId}`,\r\n                text: action.payload.text\r\n            };\r\n            cardId += 1;\r\n            const newCard = state.map((list) => {\r\n                if (list.id === action.payload.listId) {\r\n                    return {...list, card: [...list.card, newItem]};\r\n                }\r\n                return list;\r\n            });\r\n            return newCard;\r\n        }\r\n        case DRAG_HAPPEND:\r\n            const {\r\n                droppableIdStart,\r\n                droppableIdEnd,\r\n                droppableIndexStart,\r\n                droppableIndexEnd,\r\n                type\r\n            } = action.payload;\r\n            const newState = [...state];\r\n            if (type === \"list\") {\r\n                const newList = newState.splice(droppableIndexStart, 1);\r\n                newState.splice(droppableIndexEnd, 0, ...newList);\r\n                return newState;\r\n            }\r\n\r\n            //same list\r\n            if (droppableIdStart === droppableIdEnd) {\r\n\r\n                const list = state.find(list => droppableIdStart === list.id);\r\n                const card = list.card.splice(droppableIndexStart, 1);\r\n                list.card.splice(droppableIndexEnd, 0, ...card);\r\n            }\r\n            if (droppableIdStart !== droppableIdEnd) {\r\n\r\n                // найти список, где произошло перетаскивание\r\n                const listStart = state.find(list => droppableIdStart === list.id);\r\n               //вытащить карточку из этого списка\r\n                const card = listStart.card.splice(droppableIndexStart, 1);\r\n                //найти список, где перетаскивание закончилось\r\n                const listEnd = state.find(list => droppableIdEnd === list.id);\r\n                // положить карту в новый список\r\n                listEnd.card.splice(droppableIndexEnd, 0, ...card);\r\n            }\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addList = (text) => {\r\n    return {type: ADD_LIST, payload: text};\r\n};\r\n\r\nexport const addCard = (text, listId) => {\r\n    return {type: ADD_CARD, payload: {text, listId}};\r\n};\r\n\r\nexport const sort = (\r\n    droppableIdStart,\r\n    droppableIdEnd,\r\n    droppableIndexStart,\r\n    droppableIndexEnd,\r\n    draggableId,\r\n    type\r\n) => {\r\n    return {\r\n        type: DRAG_HAPPEND,\r\n        payload: {\r\n            droppableIdStart,\r\n            droppableIdEnd,\r\n            droppableIndexStart,\r\n            droppableIndexEnd,\r\n            draggableId,\r\n            type\r\n        }\r\n    };\r\n};\r\n\r\nexport default listReducer;","import React from \"react\";\r\nimport {Card, Icon} from \"@material-ui/core\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {connect} from \"react-redux\";\r\nimport {addCard, addList} from \"../reducers/reduser-list\";\r\n\r\nclass TrelloActionButton extends React.Component {\r\n\r\n    state = {\r\n        formOpen: false,\r\n        text: \"\"\r\n    };\r\n\r\n    textValue = (e) => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    };\r\n\r\n    changeState = () => {\r\n        this.setState({\r\n            formOpen: true\r\n        });\r\n    };\r\n\r\n    formClose = () => {\r\n        this.setState({\r\n            formOpen: false\r\n        });\r\n    };\r\n\r\n    renderButton = () => {\r\n        const {list} = this.props;\r\n        const buttonText = list ? \"Add another card\" : \"Add another list\";\r\n        return (\r\n            <RenderButtonSc onClick={this.changeState}>\r\n                <Icon>add</Icon>\r\n                <p>{buttonText}</p>\r\n            </RenderButtonSc>\r\n        );\r\n\r\n    };\r\n\r\n    handleAddList = () => {\r\n        const {dispatch} = this.props;\r\n        const {text} = this.state;\r\n        if (text) {\r\n            this.setState({\r\n                text: \"\"\r\n            });\r\n        }\r\n        dispatch(addList(text));\r\n        return;\r\n    };\r\n\r\n    handleAddCard = () => {\r\n        const {dispatch, listId} = this.props;\r\n        const {text} = this.state;\r\n        if (text) {\r\n            this.setState({\r\n                text: \"\"\r\n            });\r\n        }\r\n        dispatch(addCard(text, listId));\r\n        return;\r\n    };\r\n\r\n    renderForm = () => {\r\n        const {list} = this.props;\r\n        const placeHolder = list ? \"Add another card...\" : \"Add another list...\";\r\n        const buttonTitle = list ? \"Add card\" : \"Add list\";\r\n        return (\r\n            <div>\r\n                <div style={{display: \"flex\"}}>\r\n                    <CardSc>\r\n                        <TextareaAutosizeSc onBlur={this.formClose} autoFocus value={this.state.text}\r\n                                            onChange={this.textValue} placeholder={placeHolder}/>\r\n                    </CardSc>\r\n                </div>\r\n                <ButtonFormContainer>\r\n                    <Button onMouseDown={list ? this.handleAddCard : this.handleAddList} style={{\r\n                        color: \"white\",\r\n                        backgroundColor: \"#5aac44\"\r\n                    }}>\r\n                        {buttonTitle}\r\n                    </Button>\r\n                    <Icon style={{cursor: \"pointer\"}} onClick={this.formClose}>close</Icon>\r\n                </ButtonFormContainer>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.formOpen ? this.renderForm() : this.renderButton()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst ButtonFormContainer = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-top: 5px;\r\n`;\r\n\r\nconst RenderButtonSc = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\ncursor: pointer;\r\nborder-radius: 3px;\r\nheight: 36px;\r\nwidth: 272px;\r\npadding-left: 10px;\r\n`;\r\n\r\nconst CardSc = styled(Card)`\r\noverflow: visible;\r\nmin-height: 70px;\r\nmin-width: 272px;\r\npadding: 6px 8px 2px;\r\nmargin-top: 10px;\r\n`;\r\n\r\nconst TextareaAutosizeSc = styled(TextareaAutosize)`\r\nresize: none;\r\nwidth: 100%;\r\noutline: none;\r\nborder: none;\r\n`;\r\n\r\n\r\nexport default connect()(TrelloActionButton);\r\n","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport styled from \"styled-components\";\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\n\r\n\r\nconst TrelloCard = ({text, id,index}) => {\r\n    return (\r\n        <Draggable draggableId={String(id)} index={index}>\r\n            {\r\n                (provided) => (\r\n                    <CardStyle ref={provided.innerRef}\r\n                               {...provided.draggableProps}\r\n                               {...provided.dragHandleProps}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <Typography>\r\n                                    {text}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </CardStyle>\r\n                )\r\n            }\r\n\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nconst CardStyle = styled.div`\r\n  margin-top: 8px;\r\n`;\r\n\r\nexport default TrelloCard;","import React from \"react\";\r\nimport TrelloCard from \"./trelloCard\";\r\nimport styled from \"styled-components\";\r\nimport TrelloActionButton from \"./trelloActionButton\";\r\nimport {Droppable, Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst TrelloList = ({title, cards, listId, index}) => {\r\n\r\n    return (\r\n        <Draggable draggableId={listId} index={index}>\r\n            {\r\n                (provided) => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps}\r\n                         {...provided.dragHandleProps}>\r\n                        <Droppable droppableId={String(listId)}>\r\n                            {\r\n                                (provided) => (\r\n                                    <ContainerStyled ref={provided.innerRef} {...provided.droppableProps}>\r\n                                        <h4>{title}</h4>\r\n                                        {\r\n                                            cards.map((card, index) => {\r\n                                                return <TrelloCard key={card.id} text={card.text} id={card.id}\r\n                                                                   index={index}/>;\r\n                                            })\r\n                                        }\r\n                                        {provided.placeholder}\r\n                                        <TrelloActionButton listId={listId} list/>\r\n                                    </ContainerStyled>\r\n                                )\r\n                            }\r\n\r\n                        </Droppable>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nconst ContainerStyled = styled.div`\r\nbackground-color: #dfe3e6;\r\nborder-radius: 3px;\r\nwidth: 300px;\r\npadding: 8px;\r\nmargin-right: 8px;\r\n`;\r\n\r\n\r\nexport default TrelloList;","import React from \"react\";\r\nimport TrelloActionButton from \"../components/trelloActionButton.js\";\r\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\nimport TrelloList from \"../components/trelloList\";\r\nimport styled from \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\nimport {sort} from \"../reducers/reduser-list\";\r\n\r\nconst Trello = (props) => {\r\n    let {lists} = props;\r\n    const onDragEnd = (result) => {\r\n        // the only one that is required\r\n        console.log(result);\r\n        const {destination, source, draggableId, type} = result;\r\n        if (!destination) {\r\n            return;\r\n        }\r\n        props.dispatch(sort(source.droppableId, destination.droppableId, source.index, destination.index, draggableId, type));\r\n    };\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n                {\r\n                    (provided) => (\r\n                        <ListStyle ref={provided.innerRef} {...provided.droppableProps}>\r\n                            {\r\n                                lists.map((list, index) => {\r\n                                    console.log(list);\r\n                                    console.log(list.card);\r\n                                    return <TrelloList key={list.id} title={list.title} cards={list.card}\r\n                                                       listId={list.id} index={index}/>;\r\n                                })\r\n                            }\r\n                            {provided.placeholder}\r\n                            <TrelloActionButton/>\r\n                        </ListStyle>\r\n                    )\r\n                }\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        lists: state.lists\r\n    };\r\n};\r\n\r\nconst ListStyle = styled.div`\r\n\r\ndisplay: flex;\r\n`;\r\n\r\nexport default connect(mapStateToProps)(Trello);","const ADD_BUDGET = \"ADD_BUDGET\";\r\nconst DELETE_ITEM = \"DELETE_ITEM\";\r\n\r\nlet listId = 6;\r\n\r\n\r\nconst map = {\r\n    \"Доход\": \"totalIncome\",\r\n    \"Расход\": \"totalExpenses\",\r\n};\r\n\r\n\r\nconst initial = [\r\n    {\r\n        totalIncome: 0,\r\n        totalExpenses: 0,\r\n        incomeFlow: [\r\n            // {id: 0, type: \"Расход\", description: \"магазин\", amount: 22},\r\n            // {id: 1, type: \"Доход\", description: \"гараж\", amount: 33},\r\n            // {id: 2, type: \"Расход\", description: \"продукты\", amount: 44},\r\n            // {id: 3, type: \"Доход\", description: \"магазин\", amount: 66},\r\n            // {id: 4, type: \"Доход\", description: \"гараж\", amount: 222},\r\n            // {id: 5, type: \"Расход\", description: \"продукты\", amount: 7777}\r\n        ]\r\n    }\r\n];\r\n\r\nconst budgetReducer = (state = initial, action) => {\r\n    const calculateTotal = (acc, entry) => {\r\n\r\n        const {type, amount} = entry;\r\n        const key = map[type];\r\n\r\n        return {...acc, [key]: acc[key] + amount};\r\n    };\r\n    switch (action.type) {\r\n\r\n        case ADD_BUDGET: {\r\n\r\n            const {checkType, description, amount} = action.payload;\r\n            const newItem = {\r\n                id: listId,\r\n                type: checkType,\r\n                description: description,\r\n                amount: Number(amount)\r\n            };\r\n            listId += 1;\r\n\r\n            const addItem = state.map((list) => {\r\n                return {...list, totalIncome: 0, totalExpenses: 0, incomeFlow: [...list.incomeFlow, newItem]};\r\n            });\r\n\r\n\r\n            const result = addItem.map(item => item.incomeFlow.reduce(calculateTotal, item));\r\n\r\n            return result;\r\n\r\n        }\r\n\r\n\r\n        case DELETE_ITEM:\r\n            const idx = state[0].incomeFlow.findIndex((list) => {\r\n                return list.id === action.payload;\r\n            });\r\n            const deleteItem = state.map((list) => {\r\n                return {\r\n                    ...list,\r\n                    totalIncome: 0,\r\n                    totalExpenses: 0,\r\n                    incomeFlow: [...list.incomeFlow.slice(0, idx), ...list.incomeFlow.slice(idx + 1)]\r\n                };\r\n            });\r\n\r\n            const result = deleteItem.map(item => item.incomeFlow.reduce(calculateTotal, item));\r\n\r\n            return result;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const deleteItemAction = (itemId) => {\r\n    return {\r\n        type: DELETE_ITEM,\r\n        payload: itemId\r\n    };\r\n};\r\n\r\nexport const addBudget = (checkType, description, amount) => {\r\n    return {\r\n        type: ADD_BUDGET,\r\n        payload: {\r\n            checkType, description, amount\r\n        }\r\n    };\r\n};\r\n\r\nexport default budgetReducer;","import TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addBudget, deleteItemAction} from \"../reducers/reducer-budget\";\r\nimport \"./ListTable.css\";\r\n\r\nconst ListTable = (props) => {\r\n    let array = props.budget[0].incomeFlow;\r\n    const currencies = [\r\n        {\r\n            value: \"Доход\",\r\n            label: \"Доход\",\r\n        },\r\n        {\r\n            value: \"Расход\",\r\n            label: \"Расход\",\r\n        }\r\n    ];\r\n    const [currency, setCurrency] = React.useState(\"\");\r\n    const [description, setDescription] = React.useState(\"\");\r\n    const [amount, setAmount] = React.useState(null);\r\n\r\n\r\n    const handleChange = event => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    const handleDescription = e => {\r\n        setDescription(e.target.value);\r\n\r\n    };\r\n    const handleAmount = e => {\r\n        setAmount(e.target.value);\r\n    };\r\n\r\n    const addItems = (e) => {\r\n        e.preventDefault();\r\n        if (currency && description && amount !== 0) {\r\n            props.dispatch(addBudget(currency, description, amount));\r\n            setDescription(\"\");\r\n            setAmount(\"\");\r\n            setCurrency(\"\");\r\n        }\r\n\r\n    };\r\n    const deleteItem = (id) => {\r\n        props.dispatch(deleteItemAction(id));\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{\r\n            marginTop: \"50px\"\r\n        }}>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                <ListItem>\r\n                    <TableContainer>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>\r\n                                        <TextField style={{\r\n                                            width: \"100px\",\r\n                                            marginRight: \"10px\"\r\n                                        }}\r\n                                                   id=\"outlined-select-currency\"\r\n                                                   select\r\n                                                   label=\"Доход/Расход\"\r\n                                                   value={currency}\r\n                                                   onChange={handleChange}\r\n                                                   variant=\"outlined\"\r\n                                        >\r\n                                            {currencies.map(option => (\r\n                                                <MenuItem key={option.value} value={option.value}>\r\n                                                    {option.label}\r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </TextField>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <TextField\r\n                                            required\r\n                                            id=\"outlined-required\"\r\n                                            label=\"Описание\"\r\n                                            value={description}\r\n                                            onChange={handleDescription}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <TextField\r\n                                            id=\"outlined-number\"\r\n                                            label=\"Сумма\"\r\n                                            type=\"number\"\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            onChange={handleAmount}\r\n                                            variant=\"outlined\"\r\n                                            value={amount}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={addItems}>\r\n                                            <CheckIcon/>\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {array.map(row => (\r\n                                    <TableRow key={row.id}\r\n                                              className={row.type === \"Доход\" ? \"incomeAmount\" : \"ExpensesAmount\"}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {row.type}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">{row.description}</TableCell>\r\n                                        <TableCell align=\"center\">{row.amount + \".00\"}</TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <CancelIcon style={{cursor: \"pointer\"}}\r\n                                                        onClick={() => {\r\n                                                            deleteItem(row.id);\r\n                                                        }} color={\"secondary\"}/>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        budget: state.budget\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ListTable);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListTable from \"../materialUI/ListTable\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Budget = (props) => {\r\n\r\n    let income = props.total[0].totalIncome;\r\n    let expenses = props.total[0].totalExpenses;\r\n    return (\r\n        <div>\r\n            <div style={{\r\n                textAlign: \"center\"\r\n            }}>\r\n                Добро пожаловать!\r\n            </div>\r\n\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Ввод доходов и расходов\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Отчет по доходам и расходам\r\n                </Button>\r\n            </div>\r\n            <div>Финансовое состояние на:</div>\r\n            <input type=\"text\" value={\"21.12.2019\"}/>\r\n            <div>\r\n                <Card style={{backgroundColor: \"#3F4E65\", width: \"300px\", color: \"#ffffff\"}}>\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"default\" component=\"div\">\r\n                            Баланс {income - expenses} грн\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"default\" component=\"div\">\r\n                            Свои счета 131 389грн\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <ListTable/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        total: state.budget\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Budget);\r\n","import React from \"react\";\r\n\r\nconst MyInfo = () => {\r\n    return (\r\n        <div>\r\n            <h1 style={{color: \"red\"}}>В разработке....</h1>\r\n            Тут будет инфа обо мне + какие использовал библиотеки...\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyInfo;","import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport AppBarComponent from \"../materialUI/App-bar\";\nimport DrawerComponent from \"../materialUI/Drawer\";\nimport Trello from \"../attachment/Trello\";\nimport Budget from \"../attachment/Budget-controller\";\nimport styled from \"styled-components\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport MyInfo from \"./myInfo\";\n\nclass App extends Component {\n\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <AppBarComponent/>\n                    <DrawerComponent/>\n                    <div>\n                        <Route exact  path=\"/home\" render={() => <MyInfo/>}/>\n                        <Route path=\"/trelloClone\"\n                               render={() => <Trello/>}/>\n                        <BudgetSc>\n                            <Route path=\"/budget\" render={() => <Budget/>}/>\n                        </BudgetSc>\n                    </div>\n\n\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nconst BudgetSc = styled.div`{\ndisplay: flex;\njustify-content: center;\n}`;\n\n\nexport default connect()(App);\n\n\n","import {combineReducers, createStore} from \"redux\";\r\nimport listReducer from \"../reducers/reduser-list\";\r\nimport appBarStatus from \"../reducers/reducer-appbar-status\";\r\nimport budgetReducer from \"../reducers/reducer-budget\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    lists: listReducer,\r\n    appBar: appBarStatus,\r\n    budget: budgetReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store/store\";\n\nwindow.store = store;\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}